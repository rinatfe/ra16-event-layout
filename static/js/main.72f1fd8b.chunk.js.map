{"version":3,"sources":["components/IconSwitch.js","components/products.js","components/CardViews.js","components/ListViews.js","components/Store.js","App.js","reportWebVitals.js","index.js"],"names":["IconSwitch","this","props","icon","onSwitch","className","onClick","Component","products","name","price","color","img","CardViews","cards","map","item","ind","src","ListViews","items","Store","state","list","bind","evt","target","innerText","setState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAkBeA,E,4JARX,WAAU,IAAD,EACoBC,KAAKC,MAAvBC,EADF,EACEA,KAAMC,EADR,EACQA,SACb,OACI,sBAAMC,UAAU,iBAAiBC,QAASF,EAA1C,SAAqDD,Q,GATxCI,aCJnBC,EAAW,CAAC,CACdC,KAAM,gBACNC,MAAO,MACPC,MAAO,MACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,OACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,wGACJ,CACDH,KAAM,gBACNC,MAAO,MACPC,MAAO,QACPC,IAAK,yGCDMC,E,4JApBX,WAAU,IACCC,EAASb,KAAKC,MAAdY,MACP,OACI,qBAAKT,UAAU,WAAf,SACKS,EAAMC,KAAI,SAACC,EAAMC,GACd,OAAO,sBAAKZ,UAAU,WAAf,UACH,qBAAeA,UAAU,YAAzB,SAAsCW,EAAKP,MAAjCQ,GACV,qBAAeZ,UAAU,aAAzB,SAAuCW,EAAKL,OAAlCM,GACV,qBAAeZ,UAAU,WAAWa,IAAKF,EAAKJ,KAApCK,GACV,sBAAeZ,UAAU,cAAzB,UACI,uBAAMA,UAAU,QAAhB,cAA0BW,EAAKN,SAC/B,mDAFMO,e,GAdVV,aCyBTY,E,4JApBX,WAAU,IACCC,EAASnB,KAAKC,MAAdkB,MACP,OACI,qBAAKf,UAAU,WAAf,SACKe,EAAML,KAAI,SAACC,EAAMC,GACd,OAAO,qBAAIZ,UAAU,WAAd,UACH,oBAAIA,UAAU,OAAd,SAAqB,qBAAeA,UAAU,iBAAiBa,IAAKF,EAAKJ,KAA1CK,KAC/B,oBAAcZ,UAAU,YAAxB,SAAqCW,EAAKP,MAAjCQ,GACT,oBAAcZ,UAAU,aAAxB,SAAsCW,EAAKL,OAAlCM,GACT,qBAAcZ,UAAU,cAAxB,UACI,uBAAMA,UAAU,aAAhB,cAA+BW,EAAKN,SACpC,wBAAQL,UAAU,cAAlB,2BAFKY,e,GAdTV,aCyCTc,E,kDAlCX,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IAGVoB,MAAQ,CAACnB,KAAM,YAAaoB,KAAK,cAAC,EAAD,CAAWT,MAAON,KAF/C,EAAKJ,SAAS,EAAKA,SAASoB,KAAd,gBAFC,E,4CAMnB,SAASC,GACL,IAAItB,EAAO,KACPoB,EAAO,KACoB,aAAxBE,EAAIC,OAAOC,WACVxB,EAAQ,cACRoB,EAAO,cAAC,EAAD,CAAWH,MAAOZ,MAGzBL,EAAO,YACPoB,EAAO,cAAC,EAAD,CAAWT,MAAON,KAGjCP,KAAK2B,SAAU,CACPzB,KAAMA,EACNoB,KAAMA,M,oBAIlB,WACI,OACI,sBAAKlB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAYF,KAAMF,KAAKqB,MAAMnB,KAAMC,SAAUH,KAAKG,WAClD,8BAAMH,KAAKqB,MAAMC,c,GA9BbhB,a,MCGLsB,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72f1fd8b.chunk.js","sourcesContent":["import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass IconSwitch extends Component {\r\n    static propTypes = {\r\n        icon:PropTypes.string,\r\n        onSwitch:PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        const {icon, onSwitch} = this.props;\r\n        return (\r\n            <span className=\"material-icons\" onClick={onSwitch}>{icon}</span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IconSwitch;","const products = [{\r\n    name: \"Nike Metcon 2\",\r\n    price: \"130\",\r\n    color: \"red\",\r\n    img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/1.jpg\"\r\n  }, {\r\n    name: \"Nike Metcon 2\",\r\n    price: \"130\",\r\n    color: \"green\",\r\n    img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/2.jpg\"\r\n  }, {\r\n    name: \"Nike Metcon 2\",\r\n    price: \"130\",\r\n    color: \"blue\",\r\n    img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/3.jpg\"\r\n  }, {\r\n    name: \"Nike Metcon 2\",\r\n    price: \"130\",\r\n    color: \"black\",\r\n    img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/4.jpg\"\r\n  }, {\r\n    name: \"Nike free run\",\r\n    price: \"170\",\r\n    color: \"black\",\r\n    img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/7.jpg\"\r\n  }, {\r\n    name: \"Nike Metcon 3\",\r\n    price: \"150\",\r\n    color: \"green\",\r\n    img: \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/events-state/layouts/img/5.jpg\"\r\n  }];\r\n\r\n  export {products};","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardViews extends Component {\r\n    static propTypes = {\r\n        cards:PropTypes.array\r\n    }\r\n    \r\n    render() {\r\n        const {cards} = this.props;\r\n        return (\r\n            <div className=\"CardView\">\r\n                {cards.map((item, ind)=> {\r\n                    return <div className=\"ShopCard\">\r\n                        <div key={ind} className=\"card-name\">{item.name}</div>\r\n                        <div key={ind} className=\"card-color\">{item.color}</div>\r\n                        <img key={ind} className=\"card-img\" src={item.img}/>\r\n                        <div key={ind} className=\"card-footer\">\r\n                            <span className=\"price\">${item.price}</span>\r\n                            <button>ADD TO CART</button>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardViews;","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ListViews extends Component {\r\n    static propTypes = {\r\n        items:PropTypes.array\r\n    }\r\n\r\n    render() {\r\n        const {items} = this.props;\r\n        return (\r\n            <div className=\"ListView\">\r\n                {items.map((item, ind)=> {\r\n                    return <ul className=\"ShopItem\">\r\n                        <li className=\"Item\"><img key={ind} className=\"item-img-Items\" src={item.img}/></li>\r\n                        <li key={ind} className=\"item-name\">{item.name}</li>\r\n                        <li key={ind} className=\"item-color\">{item.color}</li>\r\n                        <li key={ind} className=\"item-footer\">\r\n                            <span className=\"price-Item\">${item.price}</span>\r\n                            <button className=\"list-button\">ADD TO CART</button>\r\n                        </li>\r\n                    </ul>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListViews;","import {Component, UseState} from 'react';\r\nimport IconSwitch from './IconSwitch';\r\nimport { products } from './products';\r\nimport CardViews from './CardViews';\r\nimport ListViews from './ListViews';\r\n\r\n\r\n\r\nclass Store extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.onSwitch=this.onSwitch.bind(this);\r\n    }\r\n    state = {icon: 'view_list', list:<CardViews cards={products} />}\r\n\r\n    onSwitch(evt) {\r\n        let icon = null;\r\n        let list = null;\r\n            if(evt.target.innerText == \"view_list\") {\r\n                icon =  'view_module';\r\n                list = <ListViews items={products} />\r\n                \r\n            } else {\r\n                icon = 'view_list';\r\n                list = <CardViews cards={products} />\r\n                 \r\n            }\r\n        this.setState( { \r\n                icon: icon,\r\n                list: list\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"crad-container\">\r\n                <IconSwitch icon={this.state.icon} onSwitch={this.onSwitch} />\r\n                <div>{this.state.list}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Store;","import Store from './components/Store';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Store />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}